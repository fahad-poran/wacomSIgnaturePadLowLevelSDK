<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>